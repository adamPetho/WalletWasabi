<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:wallets="clr-namespace:WalletWasabi.Fluent.ViewModels.Wallets"
             xmlns:home="using:WalletWasabi.Fluent.Views.Wallets.Home"
             xmlns:history="using:WalletWasabi.Fluent.Views.Wallets.Home.History"
             xmlns:shell="clr-namespace:WalletWasabi.Fluent.Views.Shell"
             xmlns:lang="using:WalletWasabi.Lang"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="850"
             x:DataType="wallets:WalletViewModel"
             x:CompileBindings="True"
             ClipToBounds="False"
             x:Class="WalletWasabi.Fluent.Views.Wallets.WalletView">
  <Interaction.Behaviors>
    <ShowWalletCoinsOnKeyCombinationBehavior Wallet="{Binding}" Key1="LeftCtrl" Key2="D" Key3="C" />
  </Interaction.Behaviors>
  <ContentArea ScrollViewer.VerticalScrollBarVisibility="Disabled" ClipToBounds="False" Classes="StretchTopContent">
    <ContentArea.Title>
      <TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip.Tip="{Binding $self.Text}" Text="{Binding Title, FallbackValue=My Wallet with a very long name}" />
    </ContentArea.Title>
    <ContentArea.TopContent>
      <StackPanel>
        <DockPanel>

          <!-- Buttons -->
          <StackPanel HorizontalAlignment="Right" Margin="0 -5 0 0" DockPanel.Dock="Right" Orientation="Horizontal" Spacing="10" TextElement.FontSize="{DynamicResource ControlContentThemeFontSize}">
            <Button Classes="function"
                    Command="{Binding BroadcastPsbtCommand}">
              <Button.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                  <Binding Path="PreferPsbtWorkflow" />
                  <Binding Path="IsWalletBalanceZero" Converter="{x:Static BoolConverters.Not}" />
                </MultiBinding>
              </Button.IsVisible>
              <StackPanel Orientation="Horizontal">
                <PathIcon Data="{StaticResource live_regular}" />
                <TextBlock Text="{x:Static lang:Resources.Words_Broadcast}" />
              </StackPanel>
            </Button>

            <SubActionButton Content="{x:Static lang:Resources.Words_Send}"
                             Command="{Binding DefaultSendCommand}"
                             IsVisible="{Binding IsSendButtonVisible}"
                             Icon="{StaticResource wallet_action_send}">
              <SubActionButton.SubCommands>
                <UICommandCollection>
                  <UICommand Name="Automatic"
                             Command="{Binding SendCommand}"
                             IsDefault="{Binding Settings.IsAutomaticDefaultSendWorkflow}">
                    <UICommand.Icon>
                      <PathIcon Data="{StaticResource automatic_control}"
                                Classes="Icon"/>
                    </UICommand.Icon>
                  </UICommand>
                  <UICommand Name="Manual Control"
                             Command="{Binding SendManualControlCommand}"
                             IsDefault="{Binding Settings.IsAutomaticDefaultSendWorkflow, Converter={x:Static BoolConverters.Not}}">
                    <UICommand.Icon>
                      <PathIcon Data="{StaticResource manual_control}"
                                Classes="Icon" />
                    </UICommand.Icon>
                  </UICommand>
                </UICommandCollection>
              </SubActionButton.SubCommands>
            </SubActionButton>

            <Button Classes="function"
                    Command="{Binding SegwitReceiveCommand}"
                    IsVisible="{Binding Path=SeveralReceivingScriptTypes, Converter={x:Static BoolConverters.Not}}">
              <StackPanel Orientation="Horizontal">
                <PathIcon Data="{StaticResource wallet_action_receive}" />
                <TextBlock Text="{x:Static lang:Resources.WalletView_Receive}" />
              </StackPanel>
            </Button>

            <SubActionButton Content="{x:Static lang:Resources.WalletView_Receive}"
                             Command="{Binding DefaultReceiveCommand}"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Right"
                             Icon="{StaticResource wallet_action_receive}"
                             IsVisible="{Binding SeveralReceivingScriptTypes}">
              <SubActionButton.SubCommands>
                <UICommandCollection>
                  <UICommand Name="SegWit Address"
                             Command="{Binding SegwitReceiveCommand}"
                             IsDefault="{Binding Settings.IsSegWitDefaultReceiveScriptType}">
                    <UICommand.Icon>
                      <PathIcon Data="{StaticResource segwit_short}"
                                Classes="Icon"/>
                    </UICommand.Icon>
                  </UICommand>
                  <UICommand Name="Taproot Address"
                             Command="{Binding TaprootReceiveCommand}"
                             IsDefault="{Binding Settings.IsSegWitDefaultReceiveScriptType, Converter={x:Static BoolConverters.Not}}">
                    <UICommand.Icon>
                      <PathIcon Data="{StaticResource taproot_short}"
                                Classes="Icon" />
                    </UICommand.Icon>
                  </UICommand>
                </UICommandCollection>
              </SubActionButton.SubCommands>
            </SubActionButton>

            <Panel>
              <Button Classes="function"
                      IsVisible="{Binding IsDonateButtonVisible}"
                      Command="{Binding DonateCommand}">
                <StackPanel Orientation="Horizontal">
                  <PathIcon Data="{StaticResource gift}" />
                  <TextBlock Text="{x:Static lang:Resources.WalletView_Donate}" />
                </StackPanel>
              </Button>
            </Panel>

            <Button Classes="transparentFunction">
              <Button.Flyout>
                <MenuFlyout Placement="Bottom">
                  <MenuItem Header="{x:Static lang:Resources.WalletView_WalletSettingsHeader}" Command="{Binding WalletSettingsCommand}">
                    <MenuItem.Icon>
                      <PathIcon Data="{StaticResource settings_wallet_regular}" />
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="{x:Static lang:Resources.WalletView_WalletCoinsHeader}" Command="{Binding WalletCoinsCommand}">
                    <MenuItem.Icon>
                      <PathIcon Data="{StaticResource wallet_coins}" />
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="{x:Static lang:Resources.WalletView_WalletStatsHeader}" Command="{Binding WalletStatsCommand}">
                    <MenuItem.Icon>
                      <PathIcon Data="{StaticResource stats_wallet_regular}" />
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="{x:Static lang:Resources.WalletView_WalletInfoHeader}" Command="{Binding WalletInfoCommand}">
                    <MenuItem.Icon>
                      <PathIcon Data="{StaticResource info_regular}" />
                    </MenuItem.Icon>
                  </MenuItem>
                </MenuFlyout>
              </Button.Flyout>
              <PathIcon Data="{StaticResource more_regular}" Opacity="0.6" />
            </Button>
          </StackPanel>
        </DockPanel>
      </StackPanel>
    </ContentArea.TopContent>
    <DockPanel Name="Panel" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
      <home:WalletTiles DataContext="{Binding Tiles}" DockPanel.Dock="Top" Margin="-6 -6 0 0" />
      <history:HistoryTable Name="HistoryTable"
                            DataContext="{Binding History}"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
    </DockPanel>
  </ContentArea>
</UserControl>
